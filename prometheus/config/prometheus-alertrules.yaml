# Useful examples on how to configure Prometheus
# * https://www.weave.works/prometheus-and-kubernetes-monitoring-your-applications/
# * https://grafana.net/dashboards/162
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-alertrules
  namespace: istio-system
data:
  alert.rules: |
    # Alert for high error rate in the Sock Shop.

    ALERT HighErrorRate
      IF rate(request_duration_seconds_count{status_code="500"}[5m]) > 1
      FOR 5m
      LABELS { severity = "slack" }
      ANNOTATIONS {
        summary = "High HTTP 500 error rates",
        description = "Rate of HTTP 500 errors per 5 minutes: {{ $value }}",
      }

  recording.rules: |
    groups:
      - name: rules1
        interval: 15s
        rules:
        - record: service:X_memory_usage_total_bytes:sum_rate
          expr: sum (sum by (pod) (label_replace(rate(container_memory_usage_bytes{namespace="sock-shop"}[1m]), "pod_name", "$1" , "pod", "(.*)") ) * on (pod) group_right(label_app) kube_pod_labels{namespace="sock-shop"} ) by (label_name)
        - record: service:X_cpu_usage_total_seconds:sum_rate
          expr: sum by (label_app) ( sum by (pod) (label_replace(rate(container_cpu_usage_seconds_total{namespace="default"}[1m]), "pod", "$1" , "pod_name", "(.*)") ) * on (pod) group_left(label_app) kube_pod_labels{namespace="default"} )
      - name: rules2
        interval: 15s
        rules:           
        - record: service:X_cpu_saturation_total_seconds:sum_rate
          expr: sum by (label_app) ( sum by (pod) (label_replace(rate(container_cpu_cfs_throttled_seconds_total{namespace="default"}[1m]), "pod", "$1" , "pod_name", "(.*)") ) * on (pod) group_left(label_app) kube_pod_labels{namespace="default"} )         
        - record: service:X_network_usage_bytes_total:sum_rate
          expr: sum by (label_app) ( sum by (pod) (label_replace(rate(container_network_receive_bytes_total{namespace="default"}[1m]), "pod", "$1" , "pod_name", "(.*)") ) * on (pod) group_left(label_app) kube_pod_labels{namespace="default"} ) + sum by (label_app) ( sum by (pod) (label_replace(rate(container_network_transmit_bytes_total{namespace="default"}[1m]), "pod", "$1" , "pod_name", "(.*)") ) * on (pod) group_left(label_app) kube_pod_labels{namespace="default"} )                                    
      - name: rules3
        interval: 15s
        rules:           
        - record: service:X_disk_usage_total_byte:sum_rate
          expr: sum by (label_app) ( sum by (pod) (label_replace(rate(container_fs_usage_bytes{namespace="default"}[1m]), "pod", "$1" , "pod_name", "(.*)") ) * on (pod) group_left(label_app) kube_pod_labels{namespace="default"} )        
        - record: service:X_requests_total:sum_rate
          expr: sum(rate(istio_requests_total{destination_service_namespace="default"}[1m])) by (destination_service)
      - name: rules4
        interval: 15s
        rules:          
        - record: service:X_requests_error_total:sum_rate        
          expr: sum(rate(istio_request_duration_seconds_count{response_code=~"4.+|5.+", destination_service_namespace="default", destination_service =~ ".+"}[1m])) by (destination_service) OR on() vector(0)           
        - record: service:X_95th_latency_seconds:sum_rate
          expr: histogram_quantile(0.95, sum(rate(istio_request_duration_seconds_bucket{destination_service_namespace ="default", destination_service_name =~ ".+"}[1m])) by (destination_service_name, le) OR on() vector(0))
      - name: rules5
        interval: 15s
        rules:           
        - record: service:X_95th_latency_success_seconds:sum_rate
          expr: histogram_quantile(0.95, sum(rate(istio_request_duration_seconds_bucket{response_code="200", destination_service_namespace ="default", destination_service_name =~ ".+"}[1m])) by (destination_service_name, le) OR on() vector(0))
        - record: service:X_request_size_bytes:sum_rate
          expr: sum by (destination_service)( rate(istio_request_bytes_sum{destination_workload_namespace="default"}[1m]))
      - name: rules6
        interval: 15s
        rules:           
        - record: service:X_response_size_bytes:sum_rate
          expr: sum by (destination_service)( rate(istio_response_bytes_sum{destination_workload_namespace="default"}[1m]))
        - record: service:X_container_count:sum
          expr: sum by (label_app) (sum by (pod, name_space) (kube_pod_container_status_running{namespace="default"}) * on (pod) group_left(label_app) kube_pod_labels)          
      - name: rule7
        interval: 15s
        rules:          
        - record: system:X_cpu_usage_total_seconds:sum_rate
          expr: label_replace(sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait",mode!~"^(?:guest.*)$"}[1m])) by (node), "metric", "nodes_cpu_utilization_seconds" , "app", "(.*)")
        - record: system:X_cpu_saturation_total_seconds:sum
          expr: label_replace(sum(node_load1) by (node) / count(node_cpu_seconds_total{mode="system"}) by (node) * 100 , "metric", "nodes_cpu_saturation_seconds" , "app", "(.*)")
      - name: rule8
        interval: 15s
        rules:           
        - record: system:X_network_usage_bytes_total:sum_rate
          expr: label_replace(sum(rate(node_network_receive_bytes_total[1m])) by (node) + sum(rate(node_network_transmit_bytes_total[1m])) by (node), "metric", "nodes_network_utilization_seconds" , "app", "(.*)")         
        - record: system:X_network_saturation_bytes_total:sum_rate
          expr: label_replace(sum(rate(node_network_receive_drop_total[1m])) by (node) + sum(rate(node_network_transmit_drop_total[1m])) by (node), "metric", "nodes_network_saturation_seconds" , "app", "(.*)")
      - name: rule9
        interval: 15s
        rules:           
        - record: system:X_disk_usage_bytes_total:sum_relative
          expr: label_replace(sum(node_filesystem_files_free{mountpoint="/"}) by (release) / sum(node_filesystem_files{mountpoint="/"}) by (release), "metric", "nodes_network_utilization_seconds" , "app", "(.*)")
        - record: system:X_disk_io_total_seconds:sum_rate
          expr: label_replace(sum(rate(node_disk_io_time_weighted_seconds_total[1m])) by (release) , "metric", "nodes_disk_io_time" , "app", "(.*)")
        - record: cluster:X_nodes_count:sum
          expr: label_replace(sum(kube_node_labels) by (k8s_app), "metric", "number_of_nodes" , "app", "(.*)") 
